{"version":3,"sources":["data/posts.js","reducers/reducer.js","components/Photo.js","components/Photowall.js","components/AddPhoto.js","components/Comments.js","components/Single.js","components/Main.js","database/config.js","reducers/actions.js","components/App.js","index.js"],"names":["posts","rootReducer","combineReducers","state","_posts","action","type","slice","index","post","comments","postId","comment","Photo","props","className","to","id","src","imageLink","alt","description","style","cursor","onClick","history","push","startRemovingPost","length","Photowall","sort","x","y","map","key","AddPhoto","handleSubmit","bind","e","preventDefault","imgLink","target","elements","link","value","imgDesc","Number","Date","this","startAddingPost","onHistory","onSubmit","placeholder","name","Component","Comments","startAddComment","hidden","Single","match","params","find","findIndex","loading","Main","startLoadingPosts","then","setState","startLoadingComments","exact","path","render","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","dispatch","ref","update","addPost","catch","error","console","log","once","snapshot","forEach","child","val","loadPosts","changes","removePost","addComment","Object","values","loadComments","App","connect","bindActionCreators","actions","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"0tBAEeA,EAFD,GCqCCC,EAFKC,YAAgB,CAACF,MAfvB,WAA6B,IAA5BG,EAA2B,uDAAnBC,EAAQC,EAAW,uCACxC,OAAQA,EAAOC,MACb,IAAK,cACH,MAAM,GAAN,mBAAWH,EAAMI,MAAM,EAAGF,EAAOG,QAAjC,YAA4CL,EAAMI,MAAMF,EAAOG,MAAQ,KAEzE,IAAK,WACH,MAAM,GAAN,mBAAWL,GAAX,CAAkBE,EAAOI,OAE3B,IAAK,aACH,OAAOJ,EAAOL,MAEhB,QAAS,OAAOG,IAIwBO,SAhC3B,WAAuB,IAAtBP,EAAqB,uDAAf,GAAIE,EAAW,uCACrC,OAAOA,EAAOC,MACZ,IAAK,cACH,OAAKH,EAAME,EAAOM,QAGT,2BAAIR,GAAX,kBAAmBE,EAAOM,OAA1B,sBAAuCR,EAAME,EAAOM,SAApD,CAA6DN,EAAOO,YAF7D,2BAAIT,GAAX,kBAAmBE,EAAOM,OAAS,CAACN,EAAOO,WAK/C,IAAK,gBACH,OAAOP,EAAOK,SAEhB,QAAS,OAAOP,M,wCCkBLU,EA7BD,SAAAC,GACZ,IAAML,EAAOK,EAAML,KAEnB,OACE,4BAAQM,UAAU,UAChB,kBAAC,IAAD,CAAMC,GAAE,kBAAaP,EAAKQ,KACxB,yBAAKF,UAAU,QAAQG,IAAKT,EAAKU,UAAWC,IAAKX,EAAKY,eAExD,oCAAY,+BAAKZ,EAAKY,YAAV,MACZ,yBAAKN,UAAU,oBACb,4BAAQO,MAAO,CAACC,OAAQ,WAAYC,QAAS,WACxCV,EAAMW,SAASX,EAAMW,QAAQC,KAAK,KACrCZ,EAAMa,kBAAkBb,EAAMN,MAAOC,EAAKQ,MAF5C,UAIA,kBAAC,IAAD,CAAMF,UAAU,SAASC,GAAE,kBAAaP,EAAKQ,KAC3C,yBAAKF,UAAU,iBACb,yBAAKA,UAAU,kBACdD,EAAMJ,SAASD,EAAKQ,IAAMH,EAAMJ,SAASD,EAAKQ,IAAIW,OAAS,OCGzDC,EAnBG,SAAAf,GAChB,OACE,6BACE,kBAAC,IAAD,CAAMC,UAAU,UAAUC,GAAG,aAA7B,KACA,yBAAKD,UAAU,aACZD,EAAMd,MACJ8B,MAAK,SAACC,EAAEC,GAAO,OAAOA,EAAEf,GAAKc,EAAEd,MAC/BgB,KAAI,SAACxB,EAAMD,GAAP,OACL,kBAAC,EAAD,eAAO0B,IAAK1B,EAAOC,KAAMA,GAAUK,EAAnC,CAA0CN,MAAOA,W,QC0B5C2B,E,kDAnCb,aAAc,IAAD,8BACX,gBACKC,aAAe,EAAKA,aAAaC,KAAlB,gBAFT,E,yDAKAC,GACXA,EAAEC,iBACF,IAAMC,EAAUF,EAAEG,OAAOC,SAASC,KAAKC,MACjCC,EAASP,EAAEG,OAAOC,SAASrB,YAAYuB,MACvCnC,EAAO,CACXQ,GAAI6B,OAAO,IAAIC,MACf1B,YAAawB,EACb1B,UAAWqB,GAEVK,GAAWL,IACZQ,KAAKlC,MAAMmC,gBAAgBxC,GAC3BuC,KAAKlC,MAAMoC,UAAUxB,KAAK,Q,+BAK5B,OACE,6BACE,yBAAKX,UAAU,QACf,0BAAMoC,SAAUH,KAAKZ,cACnB,2BAAO9B,KAAK,OAAO8C,YAAY,gBAAgBC,KAAK,SACpD,2BAAO/C,KAAK,OAAO8C,YAAY,cAAcC,KAAK,gBAClD,+C,GA7BaC,a,OC6BRC,E,kDA5Bb,aAAe,IAAD,8BACZ,gBACKnB,aAAe,EAAKA,aAAaC,KAAlB,gBAFR,E,yDAIDC,GACXA,EAAEC,iBACF,IAAM3B,EAAU0B,EAAEG,OAAOC,SAAS9B,QAAQgC,MAC1CI,KAAKlC,MAAM0C,gBAAgB5C,EAASoC,KAAKlC,MAAMG,IAC/CqB,EAAEG,OAAOC,SAAS9B,QAAQgC,MAAQ,K,+BAIlC,OAAO,yBAAK7B,UAAU,WAElBiC,KAAKlC,MAAMJ,SAASuB,KAAI,SAACrB,EAASJ,GAChC,OACE,uBAAG0B,IAAK1B,GAAR,IAAiBI,EAAjB,QAIN,0BAAMG,UAAU,eAAeoC,SAAUH,KAAKZ,cAC5C,2BAAO9B,KAAK,OAAO8C,YAAY,cAAcC,KAAK,YAClD,2BAAO/C,KAAK,SAASmD,QAAM,U,GAvBZH,aC+BRI,E,uKA3BH,IAAD,EACkBV,KAAKlC,MAAtB6C,EADD,EACCA,MAAO3D,EADR,EACQA,MACTiB,EAAK6B,OAAOa,EAAMC,OAAO3C,IACzBR,EAAOT,EAAM6D,MAAK,SAACpD,GAAD,OAAUA,EAAKQ,KAAOA,KACxCP,EAAWsC,KAAKlC,MAAMJ,SAASO,IAAO,GACtCT,EAAQR,EAAM8D,WAAU,SAAArD,GAAI,OAAIA,EAAKQ,KAAOA,KAElD,OAAI+B,KAAKlC,MAAMiD,QACN,yBAAKhD,UAAU,UAAf,cACEN,EACF,yBAAKM,UAAU,gBACpB,kBAAC,EAAD,eAAON,KAAMA,GAAUuC,KAAKlC,MAA5B,CAAmCN,MAAOA,KAC1C,kBAAC,EAAD,CAAUgD,gBAAiBR,KAAKlC,MAAM0C,gBAAiB9C,SAAUA,EAAUO,GAAIA,KAG1E,yBAAKF,UAAU,UACpB,uBAAGA,UAAU,oBAAb,0BAEE,6BACA,kBAAC,IAAD,CAAMC,GAAG,KAAT,c,GApBWsC,aCyCNU,E,4MArCb7D,MAAQ,CAAE4D,SAAS,G,kEAEE,IAAD,OAClBf,KAAKlC,MAAMmD,oBAAoBC,MAAK,WAAQ,EAAKC,SAAS,CAAEJ,SAAS,OACrEf,KAAKlC,MAAMsD,yB,+BAGH,IAAD,OACP,OAAIpB,KAAK7C,MAAM4D,QACN,yBAAKhD,UAAU,UAAf,cAGL,6BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,kBAEF,kBAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5B,6BACE,kBAAC,EAAc,EAAKzD,WAIxB,kBAAC,IAAD,CAAOwD,KAAK,YAAYC,OAAQ,gBAAG9C,EAAH,EAAGA,QAAH,OAC9B,kBAAC,EAAD,iBAAc,EAAKX,MAAnB,CAA0BoC,UAAWzB,QAGvC,kBAAC,IAAD,CAAO6C,KAAK,cAAcC,OAAQ,SAACX,GAAD,OAChC,kBAAC,EAAD,eAAQG,QAAS,EAAK5D,MAAM4D,SAAaH,EAAY,EAAK9C,gB,GA9BnDwC,a,iBCMnBkB,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,EAAWT,IAASS,WCZpBhC,EAAkB,SAAAxC,GAC7B,OAAO,SAACyE,GACN,OAAOD,EAASE,IAAI,SAASC,OAAtB,eAAgC3E,EAAKQ,GAAKR,IAAQyD,MAAK,WAC5DgB,EAASG,EAAQ5E,OAChB6E,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAKLtB,EAAoB,WAC/B,OAAO,SAACiB,GACN,OAAOD,EAASE,IAAI,SAASO,KAAK,SAASxB,MAAK,SAACyB,GAC/C,IAAI3F,EAAQ,GACZ2F,EAASC,SAAQ,SAACC,GAChB7F,EAAM0B,KAAKmE,EAAMC,UAGnBZ,EAASa,EAAU/F,OAClBsF,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAKL5D,EAAoB,SAACnB,EAAOS,GAAQ,IAAD,EACxC+E,GAAO,mCACD/E,GAAO,MADN,iCAEEA,GAAO,MAFT,GAKb,OAAO,SAACiE,GACN,OAAOD,EAASE,MAAMC,OAAOY,GAAS9B,MAAK,WACzCgB,EAASe,EAAWzF,OACnB8E,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAKL/B,EAAkB,SAAC5C,EAASK,GACvC,OAAO,SAACiE,GACN,OAAOD,EAASE,IAAT,mBAAyBlE,IAAMS,KAAKd,GAASsD,MAAK,WACvDgB,EAASgB,EAAWtF,EAASK,OAC5BqE,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAKLnB,EAAuB,WAClC,OAAO,SAACc,GACN,OAAOD,EAASE,IAAI,YAAYO,KAAK,SAASxB,MAAK,SAACyB,GAClD,IAAIjF,EAAW,GACfiF,EAASC,SAAQ,SAACC,GAChBnF,EAASmF,EAAM3D,KAAOiE,OAAOC,OAAOP,EAAMC,UAE5CZ,EAASmB,EAAa3F,OACrB4E,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAKLc,EAAe,SAAC3F,GAC3B,MAAO,CACLJ,KAAM,gBACNI,aAISuF,EAAa,SAAAzF,GACxB,MAAO,CACLF,KAAM,cACNE,UAIS6E,EAAU,SAAA5E,GACrB,MAAO,CACLH,KAAM,WACNG,SAISyF,EAAa,SAACtF,EAASD,GAClC,MAAO,CACLL,KAAM,cACNM,UACAD,WAISoF,EAAY,SAAC/F,GACxB,MAAO,CACLM,KAAM,aACNN,UClFJ,IAEesG,EAFHC,aAXZ,SAAyBpG,GACvB,MAAO,CACLH,MAAOG,EAAMH,MACbU,SAAUP,EAAMO,aAIpB,SAA4BwE,GAC1B,OAAOsB,YAAmBC,EAASvB,KAGzBqB,CAA6CvC,G,QCLnD0C,EAAQC,YAAY1G,EAAa2G,OAAOC,8BAAgCD,OAAOC,+BAAgCC,YAAgBC,MAErIC,IAASzC,OAAO,kBAAC,IAAD,CAAUmC,MAAOA,GAAO,kBAAC,IAAD,KAAY,kBAAC,EAAD,QAAgCO,SAASC,eAAe,W","file":"static/js/main.d8fa38f2.chunk.js","sourcesContent":["const posts = []\r\n\r\nexport default posts","import _posts from '../data/posts'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst comments = (state={}, action) => {\r\n  switch(action.type){\r\n    case 'ADD_COMMENT':\r\n      if (!state[action.postId]) {\r\n        return {...state, [action.postId]: [action.comment]}\r\n      } else {\r\n        return {...state, [action.postId]: [...state[action.postId], action.comment]}\r\n      }\r\n\r\n    case 'LOAD_COMMENTS':\r\n      return action.comments\r\n\r\n    default: return state\r\n  }\r\n  \r\n}\r\n\r\nconst posts = (state = _posts, action) => {\r\n  switch (action.type){\r\n    case 'REMOVE_POST':\r\n      return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\r\n    \r\n    case 'ADD_POST':\r\n      return [...state, action.post]\r\n\r\n    case 'LOAD_POSTS':\r\n      return action.posts\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({posts, comments})\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Photo = props => {\r\n  const post = props.post\r\n\r\n  return (\r\n    <figure className=\"figure\">\r\n      <Link to={`/single/${post.id}`}>\r\n        <img className=\"photo\" src={post.imageLink} alt={post.description} />\r\n      </Link>\r\n      <figcaption><p> {post.description} </p></figcaption>\r\n      <div className=\"button-container\">\r\n        <button style={{cursor: 'pointer'}} onClick={() => {\r\n          if(props.history) props.history.push('/')\r\n          props.startRemovingPost(props.index, post.id)\r\n        }}>Delete</button>\r\n        <Link className=\"button\" to={`/single/${post.id}`}>\r\n          <div className=\"comment-count\">\r\n            <div className=\"speech-bubble\"></div>\r\n            {props.comments[post.id] ? props.comments[post.id].length : 0}\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </figure>\r\n  )\r\n}\r\n\r\nPhoto.propTypes = {\r\n  post: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Photo","import React from 'react'\r\nimport Photo from './Photo'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Photowall = props => {\r\n  return (\r\n    <div>\r\n      <Link className=\"addIcon\" to=\"/AddPhoto\"> </Link>\r\n      <div className=\"photoGrid\">\r\n        {props.posts\r\n          .sort((x,y) => {return y.id - x.id})\r\n          .map((post, index) =>\r\n          <Photo key={index} post={post} {...props} index={index} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPhotowall.propTypes = {\r\n  posts: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Photowall\r\n","import React, { Component } from 'react'\r\n\r\nclass AddPhoto extends Component {\r\n\r\n  constructor(){\r\n    super()\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n  \r\n  handleSubmit(e) {\r\n    e.preventDefault()\r\n    const imgLink = e.target.elements.link.value\r\n    const imgDesc= e.target.elements.description.value\r\n    const post = {\r\n      id: Number(new Date()),\r\n      description: imgDesc,\r\n      imageLink: imgLink\r\n    }\r\n    if(imgDesc && imgLink){\r\n      this.props.startAddingPost(post)\r\n      this.props.onHistory.push('/')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input type=\"text\" placeholder=\"link to photo\" name=\"link\"/>\r\n          <input type=\"text\" placeholder=\"description\" name=\"description\"/>\r\n          <button>Post</button>\r\n        </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddPhoto","import React, { Component } from 'react'\r\n\r\nclass Comments extends Component {\r\n  constructor() {\r\n    super()\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault()\r\n    const comment = e.target.elements.comment.value\r\n    this.props.startAddComment(comment, this.props.id)\r\n    e.target.elements.comment.value = \"\"\r\n  }\r\n  render() {\r\n    \r\n    return <div className=\"comment\">\r\n      {\r\n        this.props.comments.map((comment, index) => {\r\n          return (\r\n            <p key={index}> {comment} </p>\r\n          )\r\n        })\r\n      }\r\n      <form className=\"comment-form\" onSubmit={this.handleSubmit} >\r\n        <input type=\"text\" placeholder=\"add comment\" name=\"comment\" />\r\n        <input type=\"submit\" hidden/>\r\n      </form>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Comments","import React, { Component } from 'react'\r\nimport Photo from './Photo'\r\nimport Comments from './Comments'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Single extends Component {\r\n  render() {\r\n    const { match, posts } = this.props\r\n    const id = Number(match.params.id)\r\n    const post = posts.find((post) => post.id === id)\r\n    const comments = this.props.comments[id] || []\r\n    const index = posts.findIndex(post => post.id === id)\r\n\r\n    if (this.props.loading) {\r\n      return <div className=\"loader\">...loading</div>\r\n    } else if (post) {\r\n      return <div className='single-photo'>\r\n        <Photo post={post} {...this.props} index={index} />\r\n        <Comments startAddComment={this.props.startAddComment} comments={comments} id={id} />\r\n      </div>\r\n    } else {\r\n      return <div className=\"loader\">\r\n        <p className=\"textalign-center\">\r\n          Photo has been deleted!\r\n          <br />\r\n          <Link to=\"/\">Home</Link>\r\n        </p>\r\n      </div >\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Single","import React, { Component } from 'react'\r\nimport Photowall from './Photowall'\r\nimport AddPhoto from './AddPhoto'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport Single from './Single'\r\n\r\nclass Main extends Component {\r\n\r\n  //component state to control refreshing single photo\r\n  state = { loading: true }\r\n\r\n  componentDidMount() {\r\n    this.props.startLoadingPosts().then(() => { this.setState({ loading: false }) })\r\n    this.props.startLoadingComments()\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div className=\"loader\">...loading</div>\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>\r\n            <Link to=\"/\">Photo Gallery</Link>\r\n          </h1>\r\n          <Route exact path=\"/\" render={() => (\r\n            <div>\r\n              <Photowall {...this.props} />\r\n            </div>\r\n          )} />\r\n\r\n          <Route path=\"/AddPhoto\" render={({ history }) => (\r\n            <AddPhoto {...this.props} onHistory={history} />\r\n          )} />\r\n\r\n          <Route path=\"/single/:id\" render={(params) => (\r\n            <Single loading={this.state.loading} {...params} {...this.props} />\r\n          )} />\r\n\r\n        </div>\r\n\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Main\r\n\r\n","import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyC3k1bczJlN2vuPakL4Vi3XAuqdzfHUwkg\",\r\n  authDomain: \"photogallery-1370e.firebaseapp.com\",\r\n  databaseURL: \"https://photogallery-1370e.firebaseio.com\",\r\n  projectId: \"photogallery-1370e\",\r\n  storageBucket: \"photogallery-1370e.appspot.com\",\r\n  messagingSenderId: \"878606366922\",\r\n  appId: \"1:878606366922:web:d6b4e7f4b08f35a5d41c33\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const database = firebase.database()\r\n","import { database } from '../database/config'\r\n\r\nexport const startAddingPost = post => {\r\n  return (dispatch) => {\r\n    return database.ref('posts').update({ [post.id]: post }).then(() => {\r\n      dispatch(addPost(post))\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n\r\nexport const startLoadingPosts = () => {\r\n  return (dispatch) => {\r\n    return database.ref('posts').once('value').then((snapshot) => {\r\n      let posts = []\r\n      snapshot.forEach((child) => {\r\n        posts.push(child.val())\r\n      })\r\n      //console.log(posts)\r\n      dispatch(loadPosts(posts))\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n\r\nexport const startRemovingPost = (index, id) => {\r\n  const changes = {\r\n    [`posts/${id}`]: null,\r\n    [`comments/${id}`]: null\r\n  }\r\n\r\n  return (dispatch) => {\r\n    return database.ref().update(changes).then(() => {\r\n      dispatch(removePost(index))\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n\r\nexport const startAddComment = (comment, id) => {\r\n  return (dispatch) => {\r\n    return database.ref(`comments/${id}`).push(comment).then(() => {\r\n      dispatch(addComment(comment, id))\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n\r\nexport const startLoadingComments = () => {\r\n  return (dispatch) => {\r\n    return database.ref('comments').once('value').then((snapshot) => {\r\n      let comments = {}\r\n      snapshot.forEach((child) => {\r\n        comments[child.key] = Object.values(child.val())\r\n      })\r\n      dispatch(loadComments(comments))\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n\r\nexport const loadComments = (comments) => {\r\n  return {\r\n    type: 'LOAD_COMMENTS',\r\n    comments\r\n  }\r\n}\r\n\r\nexport const removePost = index => {\r\n  return {\r\n    type: 'REMOVE_POST',\r\n    index\r\n  }\r\n}\r\n\r\nexport const addPost = post => {\r\n  return {\r\n    type: 'ADD_POST',\r\n    post\r\n  }\r\n}\r\n\r\nexport const addComment = (comment, postId) => {\r\n  return {\r\n    type: 'ADD_COMMENT',\r\n    comment,\r\n    postId\r\n  }\r\n}\r\n\r\nexport const loadPosts = (posts) => {\r\n  return {\r\n    type: 'LOAD_POSTS',\r\n    posts\r\n  }\r\n}\r\n","import Main from './Main'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport * as actions from '../reducers/actions'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts,\r\n    comments: state.comments\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(actions, dispatch)\r\n}\r\n\r\nconst App = connect(mapStateToProps, mapDispatchToProps)(Main)\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/style.css'\nimport {HashRouter} from 'react-router-dom'\nimport {createStore, applyMiddleware} from 'redux'\nimport rootReducer from './reducers/reducer'\nimport {Provider} from 'react-redux' \nimport App from './components/App'\nimport thunk from 'redux-thunk'\n\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk))\n\nReactDOM.render(<Provider store={store}><HashRouter><App/></HashRouter></Provider>, document.getElementById('root'))\n"],"sourceRoot":""}